version: '3.5' 

services:
  api:
    build:
      context: api
      target: local
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - VERSION=compose
    volumes:
      - ./api:/usr/src/app/api
    networks:
      - apioverlay

  db:
    container_name: db
    build:
      context: .
      dockerfile: scripts/Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=database
      - POSTGRES_USER=fsmuser
      - POSTGRES_PASSWORD=HelpMe
    volumes:
      - database-data:/var/lib/postgresql/data
    restart: always
    networks:
      - apioverlay
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d database -U fsmuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: web/
#      dockerfile: web/Dockerfile
      target: local
      args:
        - node=14-alpine3.12
    volumes:
      - ./web/public:/usr/src/app/public
      - ./web/src:/usr/src/app/src
    ports:
      - '3000:80'
    environment:
      - NODE_ENV=development
      - PORT=80
#    depends_on:
#      - database-proxy
    networks:
      - apioverlay
    tty: true

volumes:
  database-data:

networks:
  apioverlay:
    name: apioverlay
    ipam:
      config:
        - subnet: 10.5.0.0/16
